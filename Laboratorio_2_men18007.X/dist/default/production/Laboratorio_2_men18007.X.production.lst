

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 07:11:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	nvCOMMON
   209  0075                     __pnvCOMMON:
   210  0075                     _counter_ADC:
   211  0075                     	ds	1
   212  0009                     _PORTEbits	set	9
   213  001F                     _ADCON0bits	set	31
   214  0007                     _PORTC	set	7
   215  0006                     _PORTB	set	6
   216  0009                     _PORTE	set	9
   217  0006                     _PORTBbits	set	6
   218  009F                     _ADCON1	set	159
   219  0087                     _TRISC	set	135
   220  0086                     _TRISB	set	134
   221  0089                     _TRISE	set	137
   222  0188                     _ANSEL	set	392
   223                           
   224                           	psect	cinit
   225  07FA                     start_initialization:	
   226                           ; #config settings
   227                           
   228  07FA                     __initialization:
   229                           
   230                           ; Clear objects allocated to COMMON
   231  07FA  01F3               	clrf	__pbssCOMMON& (0+127)
   232  07FB  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2FC6   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0073                     __pbssCOMMON:
   242  0073                     _BIT_ALARM:
   243  0073                     	ds	1
   244  0074                     _counter_Bin:
   245  0074                     	ds	1
   246                           
   247                           	psect	cstackCOMMON
   248  0070                     __pcstackCOMMON:
   249  0070                     ?_setup:
   250  0070                     ??_setup:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_count_up:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_count_up:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_PBinario:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_PBinario:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_count_down:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ??_count_down:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_Alarma:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??_Alarma:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_main:	
   278                           ; 1 bytes @ 0x0
   279                           
   280                           
   281                           ; 1 bytes @ 0x0
   282  0070                     	ds	3
   283  0073                     ??_main:
   284                           
   285                           	psect	maintext
   286  07C6                     __pmaintext:	
   287                           ; 1 bytes @ 0x3
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 50 in file "CODIGO_ADC.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels required when called:    1
   313 ;; This function calls:
   314 ;;		_Alarma
   315 ;;		_PBinario
   316 ;;		_count_down
   317 ;;		_count_up
   318 ;;		_setup
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           
   325                           ;psect for function _main
   326  07C6                     _main:
   327  07C6                     l693:	
   328                           ;incstack = 0
   329                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   330                           
   331                           
   332                           ;CODIGO_ADC.c: 51:     PORTE = 0;
   333  07C6  120A  118A  27AB  120A  118A  	fcall	_setup
   334  07CB                     l695:
   335                           
   336                           ;CODIGO_ADC.c: 54:     PORTB = 0;
   337  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   338  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   339  07CD  1C86               	btfss	6,1	;volatile
   340  07CE  2FD0               	goto	u11
   341  07CF  2FD1               	goto	u10
   342  07D0                     u11:
   343  07D0  2FDB               	goto	l699
   344  07D1                     u10:
   345  07D1                     l697:
   346                           
   347                           ;CODIGO_ADC.c: 55:     TRISC = 0;
   348  07D1  120A  118A  2782  120A  118A  	fcall	_count_up
   349                           
   350                           ;CODIGO_ADC.c: 56:     PORTC = 0;
   351  07D6  120A  118A  276D  120A  118A  	fcall	_PBinario
   352  07DB                     l699:
   353                           
   354                           ;CODIGO_ADC.c: 58: 
   355  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   356  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   357  07DD  1D06               	btfss	6,2	;volatile
   358  07DE  2FE0               	goto	u21
   359  07DF  2FE1               	goto	u20
   360  07E0                     u21:
   361  07E0  2FEB               	goto	l703
   362  07E1                     u20:
   363  07E1                     l701:
   364                           
   365                           ;CODIGO_ADC.c: 59: }
   366  07E1  120A  118A  2772  120A  118A  	fcall	_count_down
   367                           
   368                           ;CODIGO_ADC.c: 60: 
   369  07E6  120A  118A  276D  120A  118A  	fcall	_PBinario
   370  07EB                     l703:
   371                           
   372                           ;CODIGO_ADC.c: 66:     ADCON0bits.CHS2 = 1;
   373  07EB  0875               	movf	_counter_ADC,w
   374  07EC  0674               	xorwf	_counter_Bin,w
   375  07ED  1D03               	skipz
   376  07EE  2FF0               	goto	u31
   377  07EF  2FF1               	goto	u30
   378  07F0                     u31:
   379  07F0  2FCB               	goto	l695
   380  07F1                     u30:
   381  07F1                     l705:
   382                           
   383                           ;CODIGO_ADC.c: 67:     ADCON0bits.CHS1 = 0;
   384  07F1  120A  118A  2796  120A  118A  	fcall	_Alarma
   385  07F6  2FCB               	goto	l695
   386  07F7  120A  118A  2800   	ljmp	start
   387  07FA                     __end_of_main:
   388                           
   389                           	psect	text1
   390  07AB                     __ptext1:	
   391 ;; *************** function _setup *****************
   392 ;; Defined at:
   393 ;;		line 77 in file "CODIGO_ADC.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          1       0       0       0       0
   410 ;;      Totals:         1       0       0       0       0
   411 ;;Total ram usage:        1 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _setup
   422  07AB                     _setup:
   423  07AB                     l661:	
   424                           ;incstack = 0
   425                           ; Regs used in _setup: [wreg+status,2]
   426                           
   427                           
   428                           ;CODIGO_ADC.c: 78:     _delay((unsigned long)((100)*(8000000/4000.0)));
   429  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   430  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   431  07AD  0189               	clrf	9	;volatile
   432                           
   433                           ;CODIGO_ADC.c: 79:     counter_Bin += 1;
   434  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   435  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   436  07B0  0189               	clrf	9	;volatile
   437                           
   438                           ;CODIGO_ADC.c: 80:     BIT_ALARM = 1;
   439  07B1  1683               	bsf	3,5	;RP0=1, select bank3
   440  07B2  1703               	bsf	3,6	;RP1=1, select bank3
   441  07B3  0188               	clrf	8	;volatile
   442  07B4                     l663:
   443                           
   444                           ;CODIGO_ADC.c: 81: }
   445  07B4  3006               	movlw	6
   446  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   447  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   448  07B7  0086               	movwf	6	;volatile
   449  07B8                     l665:
   450                           
   451                           ;CODIGO_ADC.c: 82: 
   452  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   453  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   454  07BA  0186               	clrf	6	;volatile
   455  07BB                     l667:
   456                           
   457                           ;CODIGO_ADC.c: 83: void count_down(void){
   458  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   459  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   460  07BD  0187               	clrf	7	;volatile
   461  07BE                     l669:
   462                           
   463                           ;CODIGO_ADC.c: 84:     _delay((unsigned long)((100)*(8000000/4000.0)));
   464  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   465  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   466  07C0  0187               	clrf	7	;volatile
   467                           
   468                           ;CODIGO_ADC.c: 85:     counter_Bin -= 1;
   469  07C1  300A               	movlw	10
   470  07C2  00F0               	movwf	??_setup
   471  07C3  0870               	movf	??_setup,w
   472  07C4  00F5               	movwf	_counter_ADC
   473  07C5                     l54:
   474  07C5  0008               	return
   475  07C6                     __end_of_setup:
   476                           
   477                           	psect	text2
   478  0782                     __ptext2:	
   479 ;; *************** function _count_up *****************
   480 ;; Defined at:
   481 ;;		line 105 in file "CODIGO_ADC.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          3       0       0       0       0
   498 ;;      Totals:         3       0       0       0       0
   499 ;;Total ram usage:        3 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _count_up
   510  0782                     _count_up:
   511  0782                     l671:	
   512                           ;incstack = 0
   513                           ; Regs used in _count_up: [wreg+status,2+status,0]
   514                           
   515  0782  3002               	movlw	2
   516  0783  00F2               	movwf	??_count_up+2
   517  0784  3004               	movlw	4
   518  0785  00F1               	movwf	??_count_up+1
   519  0786  30BA               	movlw	186
   520  0787  00F0               	movwf	??_count_up
   521  0788                     u47:
   522  0788  0BF0               	decfsz	??_count_up,f
   523  0789  2F88               	goto	u47
   524  078A  0BF1               	decfsz	??_count_up+1,f
   525  078B  2F88               	goto	u47
   526  078C  0BF2               	decfsz	??_count_up+2,f
   527  078D  2F88               	goto	u47
   528  078E  0000               	nop
   529  078F                     l673:
   530  078F  3001               	movlw	1
   531  0790  00F0               	movwf	??_count_up
   532  0791  0870               	movf	??_count_up,w
   533  0792  07F4               	addwf	_counter_Bin,f
   534  0793                     l675:
   535  0793  01F3               	clrf	_BIT_ALARM
   536  0794  0AF3               	incf	_BIT_ALARM,f
   537  0795                     l60:
   538  0795  0008               	return
   539  0796                     __end_of_count_up:
   540                           
   541                           	psect	text3
   542  0772                     __ptext3:	
   543 ;; *************** function _count_down *****************
   544 ;; Defined at:
   545 ;;		line 111 in file "CODIGO_ADC.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          3       0       0       0       0
   562 ;;      Totals:         3       0       0       0       0
   563 ;;Total ram usage:        3 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _count_down
   574  0772                     _count_down:
   575  0772                     l679:	
   576                           ;incstack = 0
   577                           ; Regs used in _count_down: [wreg+status,2+status,0]
   578                           
   579  0772  3002               	movlw	2
   580  0773  00F2               	movwf	??_count_down+2
   581  0774  3004               	movlw	4
   582  0775  00F1               	movwf	??_count_down+1
   583  0776  30BA               	movlw	186
   584  0777  00F0               	movwf	??_count_down
   585  0778                     u57:
   586  0778  0BF0               	decfsz	??_count_down,f
   587  0779  2F78               	goto	u57
   588  077A  0BF1               	decfsz	??_count_down+1,f
   589  077B  2F78               	goto	u57
   590  077C  0BF2               	decfsz	??_count_down+2,f
   591  077D  2F78               	goto	u57
   592  077E  0000               	nop
   593  077F                     l681:
   594  077F  3001               	movlw	1
   595  0780  02F4               	subwf	_counter_Bin,f
   596  0781                     l63:
   597  0781  0008               	return
   598  0782                     __end_of_count_down:
   599                           
   600                           	psect	text4
   601  076D                     __ptext4:	
   602 ;; *************** function _PBinario *****************
   603 ;; Defined at:
   604 ;;		line 116 in file "CODIGO_ADC.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _PBinario
   633  076D                     _PBinario:
   634  076D                     l677:	
   635                           ;incstack = 0
   636                           ; Regs used in _PBinario: [wreg]
   637                           
   638  076D  0874               	movf	_counter_Bin,w
   639  076E  1283               	bcf	3,5	;RP0=0, select bank0
   640  076F  1303               	bcf	3,6	;RP1=0, select bank0
   641  0770  0087               	movwf	7	;volatile
   642  0771                     l66:
   643  0771  0008               	return
   644  0772                     __end_of_PBinario:
   645                           
   646                           	psect	text5
   647  0796                     __ptext5:	
   648 ;; *************** function _Alarma *****************
   649 ;; Defined at:
   650 ;;		line 120 in file "CODIGO_ADC.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          3       0       0       0       0
   667 ;;      Totals:         3       0       0       0       0
   668 ;;Total ram usage:        3 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _Alarma
   679  0796                     _Alarma:
   680  0796                     l683:	
   681                           ;incstack = 0
   682                           ; Regs used in _Alarma: [wreg+status,2]
   683                           
   684  0796  1283               	bcf	3,5	;RP0=0, select bank0
   685  0797  1303               	bcf	3,6	;RP1=0, select bank0
   686  0798  1509               	bsf	9,2	;volatile
   687  0799                     l685:
   688  0799  3005               	movlw	5
   689  079A  00F2               	movwf	??_Alarma+2
   690  079B  300F               	movlw	15
   691  079C  00F1               	movwf	??_Alarma+1
   692  079D  30F1               	movlw	241
   693  079E  00F0               	movwf	??_Alarma
   694  079F                     u67:
   695  079F  0BF0               	decfsz	??_Alarma,f
   696  07A0  2F9F               	goto	u67
   697  07A1  0BF1               	decfsz	??_Alarma+1,f
   698  07A2  2F9F               	goto	u67
   699  07A3  0BF2               	decfsz	??_Alarma+2,f
   700  07A4  2F9F               	goto	u67
   701  07A5                     l687:
   702  07A5  01F4               	clrf	_counter_Bin
   703  07A6                     l689:
   704  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   705  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   706  07A8  1109               	bcf	9,2	;volatile
   707  07A9                     l691:
   708  07A9  0187               	clrf	7	;volatile
   709  07AA                     l69:
   710  07AA  0008               	return
   711  07AB                     __end_of_Alarma:
   712  007E                     btemp	set	126	;btemp
   713  007E                     wtemp0	set	126
   714                           
   715                           	psect	config
   716                           
   717                           ;Config register CONFIG1 @ 0x2007
   718                           ;	Oscillator Selection bits
   719                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   720                           ;	Watchdog Timer Enable bit
   721                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   722                           ;	Power-up Timer Enable bit
   723                           ;	PWRTE = OFF, PWRT disabled
   724                           ;	RE3/MCLR pin function select bit
   725                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   726                           ;	Code Protection bit
   727                           ;	CP = OFF, Program memory code protection is disabled
   728                           ;	Data Code Protection bit
   729                           ;	CPD = OFF, Data memory code protection is disabled
   730                           ;	Brown Out Reset Selection bits
   731                           ;	BOREN = OFF, BOR disabled
   732                           ;	Internal External Switchover bit
   733                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   734                           ;	Fail-Safe Clock Monitor Enabled bit
   735                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   736                           ;	Low Voltage Programming Enable bit
   737                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   738                           ;	In-Circuit Debugger Mode bit
   739                           ;	DEBUG = 0x1, unprogrammed default
   740  2007                     	org	8199
   741  2007  20D1               	dw	8401
   742                           
   743                           ;Config register CONFIG2 @ 0x2008
   744                           ;	Brown-out Reset Selection bit
   745                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   746                           ;	Flash Program Memory Self Write Enable bits
   747                           ;	WRT = OFF, Write protection off
   748  2008                     	org	8200
   749  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Alarma
    _main->_count_down
    _main->_count_up

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _Alarma
                           _PBinario
                         _count_down
                           _count_up
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _count_up                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _count_down                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PBinario                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarma                                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarma
   _PBinario
   _count_down
   _count_up
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 07:11:54 2021

                     l60 0795                       l54 07C5                       l63 0781  
                     l66 0771                       l69 07AA                       u10 07D1  
                     u11 07D0                       u20 07E1                       u21 07E0  
                     u30 07F1                       u31 07F0                       u47 0788  
                     u57 0778                       u67 079F                      l701 07E1  
                    l703 07EB                      l705 07F1                      l661 07AB  
                    l671 0782                      l663 07B4                      l681 077F  
                    l673 078F                      l665 07B8                      l691 07A9  
                    l683 0796                      l675 0793                      l667 07BB  
                    l685 0799                      l677 076D                      l669 07BE  
                    l693 07C6                      l687 07A5                      l679 0772  
                    l695 07CB                      l689 07A6                      l697 07D1  
                    l699 07DB                     _main 07C6                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTC 0007                    _PORTE 0009  
                  _TRISB 0086                    _TRISC 0087                    _TRISE 0089  
                  _setup 07AB         __end_of_PBinario 0772                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0073                   _ADCON1 009F                   ?_setup 0070  
                 _Alarma 0796         __end_of_count_up 0796  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 07C6                ?_PBinario 0070  
                ??_setup 0070               __pnvCOMMON 0075                  ?_Alarma 0070  
             __pmaintext 07C6               ??_PBinario 0070                ?_count_up 0070  
        __size_of_Alarma 0015               _count_down 0772                _BIT_ALARM 0073  
                __ptext1 07AB                  __ptext2 0782                  __ptext3 0772  
                __ptext4 076D                  __ptext5 0796     end_of_initialization 07FC  
             ??_count_up 0070                _PORTBbits 0006                _PORTEbits 0009  
            ?_count_down 0070           __end_of_Alarma 07AB        __size_of_PBinario 0005  
    start_initialization 07FA                 ??_Alarma 0070              __pbssCOMMON 0073  
              ___latbits 0002      __size_of_count_down 0010        __size_of_count_up 0014  
         __size_of_setup 001B               _ADCON0bits 001F                 _PBinario 076D  
            _counter_ADC 0075              _counter_Bin 0074             ??_count_down 0070  
     __end_of_count_down 0782                 _count_up 0782            __size_of_main 0034  
