

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 15:55:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	nvCOMMON
   209  0073                     __pnvCOMMON:
   210  0073                     _counter_ADC:
   211  0073                     	ds	1
   212  0009                     _PORTEbits	set	9
   213  0007                     _PORTC	set	7
   214  0006                     _PORTB	set	6
   215  0009                     _PORTE	set	9
   216  0006                     _PORTBbits	set	6
   217  0087                     _TRISC	set	135
   218  0086                     _TRISB	set	134
   219  0089                     _TRISE	set	137
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  07FB                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07FB                     __initialization:
   228                           
   229                           ; Clear objects allocated to COMMON
   230  07FB  01F4               	clrf	__pbssCOMMON& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2FC7   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0074                     __pbssCOMMON:
   240  0074                     _counter_Bin:
   241  0074                     	ds	1
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:
   245  0070                     ?_setup:
   246  0070                     ??_setup:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_count_up:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ??_count_up:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_PBinario:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ??_PBinario:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_count_down:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ??_count_down:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_Alarma:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??_Alarma:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_main:	
   274                           ; 1 bytes @ 0x0
   275                           
   276                           
   277                           ; 1 bytes @ 0x0
   278  0070                     	ds	3
   279  0073                     ??_main:
   280                           
   281                           	psect	maintext
   282  07C7                     __pmaintext:	
   283                           ; 1 bytes @ 0x3
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 48 in file "CODIGO_ADC.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called:    1
   309 ;; This function calls:
   310 ;;		_Alarma
   311 ;;		_PBinario
   312 ;;		_count_down
   313 ;;		_count_up
   314 ;;		_setup
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           
   321                           ;psect for function _main
   322  07C7                     _main:
   323  07C7                     l684:	
   324                           ;incstack = 0
   325                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   326                           
   327                           
   328                           ;CODIGO_ADC.c: 50:     PORTB = 0;
   329  07C7  120A  118A  27AB  120A  118A  	fcall	_setup
   330  07CC                     l686:
   331                           
   332                           ;CODIGO_ADC.c: 53:     counter_ADC = 3;
   333  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   334  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   335  07CE  1C86               	btfss	6,1	;volatile
   336  07CF  2FD1               	goto	u11
   337  07D0  2FD2               	goto	u10
   338  07D1                     u11:
   339  07D1  2FDC               	goto	l690
   340  07D2                     u10:
   341  07D2                     l688:
   342                           
   343                           ;CODIGO_ADC.c: 54: }
   344  07D2  120A  118A  2784  120A  118A  	fcall	_count_up
   345                           
   346                           ;CODIGO_ADC.c: 55: 
   347  07D7  120A  118A  276F  120A  118A  	fcall	_PBinario
   348  07DC                     l690:
   349                           
   350                           ;CODIGO_ADC.c: 57: 
   351  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   352  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   353  07DE  1D06               	btfss	6,2	;volatile
   354  07DF  2FE1               	goto	u21
   355  07E0  2FE2               	goto	u20
   356  07E1                     u21:
   357  07E1  2FEC               	goto	l694
   358  07E2                     u20:
   359  07E2                     l692:
   360                           
   361                           ;CODIGO_ADC.c: 58: 
   362  07E2  120A  118A  2774  120A  118A  	fcall	_count_down
   363                           
   364                           ;CODIGO_ADC.c: 59: void count_up(void){
   365  07E7  120A  118A  276F  120A  118A  	fcall	_PBinario
   366  07EC                     l694:
   367                           
   368                           ;CODIGO_ADC.c: 61:     counter_Bin += 1;
   369  07EC  0873               	movf	_counter_ADC,w
   370  07ED  0674               	xorwf	_counter_Bin,w
   371  07EE  1D03               	skipz
   372  07EF  2FF1               	goto	u31
   373  07F0  2FF2               	goto	u30
   374  07F1                     u31:
   375  07F1  2FCC               	goto	l686
   376  07F2                     u30:
   377  07F2                     l696:
   378                           
   379                           ;CODIGO_ADC.c: 62: 
   380  07F2  120A  118A  2796  120A  118A  	fcall	_Alarma
   381  07F7  2FCC               	goto	l686
   382  07F8  120A  118A  2800   	ljmp	start
   383  07FB                     __end_of_main:
   384                           
   385                           	psect	text1
   386  07AB                     __ptext1:	
   387 ;; *************** function _setup *****************
   388 ;; Defined at:
   389 ;;		line 72 in file "CODIGO_ADC.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          1       0       0       0       0
   406 ;;      Totals:         1       0       0       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _setup
   418  07AB                     _setup:
   419  07AB                     l654:	
   420                           ;incstack = 0
   421                           ; Regs used in _setup: [wreg+status,2]
   422                           
   423                           
   424                           ;CODIGO_ADC.c: 73: }
   425  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   426  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   427  07AD  0189               	clrf	9	;volatile
   428                           
   429                           ;CODIGO_ADC.c: 74: 
   430  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   431  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   432  07B0  0189               	clrf	9	;volatile
   433                           
   434                           ;CODIGO_ADC.c: 75: void Alarma(void){
   435  07B1  1683               	bsf	3,5	;RP0=1, select bank3
   436  07B2  1703               	bsf	3,6	;RP1=1, select bank3
   437  07B3  0188               	clrf	8	;volatile
   438                           
   439                           ;CODIGO_ADC.c: 76:     PORTEbits.RE2 = 1;
   440  07B4  0189               	clrf	9	;volatile
   441  07B5                     l656:
   442                           
   443                           ;CODIGO_ADC.c: 77:     _delay((unsigned long)((400)*(8000000/4000.0)));
   444  07B5  3006               	movlw	6
   445  07B6  1683               	bsf	3,5	;RP0=1, select bank1
   446  07B7  1303               	bcf	3,6	;RP1=0, select bank1
   447  07B8  0086               	movwf	6	;volatile
   448  07B9                     l658:
   449                           
   450                           ;CODIGO_ADC.c: 78:     counter_Bin = 0;
   451  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   452  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   453  07BB  0186               	clrf	6	;volatile
   454  07BC                     l660:
   455                           
   456                           ;CODIGO_ADC.c: 79:     PORTEbits.RE2 = 0;
   457  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   458  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   459  07BE  0187               	clrf	7	;volatile
   460  07BF                     l662:
   461                           
   462                           ;CODIGO_ADC.c: 80:     PORTC = 0;
   463  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   464  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   465  07C1  0187               	clrf	7	;volatile
   466                           
   467                           ;CODIGO_ADC.c: 81: }
   468  07C2  3003               	movlw	3
   469  07C3  00F0               	movwf	??_setup
   470  07C4  0870               	movf	??_setup,w
   471  07C5  00F3               	movwf	_counter_ADC
   472  07C6                     l50:
   473  07C6  0008               	return
   474  07C7                     __end_of_setup:
   475                           
   476                           	psect	text2
   477  0784                     __ptext2:	
   478 ;; *************** function _count_up *****************
   479 ;; Defined at:
   480 ;;		line 87 in file "CODIGO_ADC.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          3       0       0       0       0
   497 ;;      Totals:         3       0       0       0       0
   498 ;;Total ram usage:        3 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _count_up
   509  0784                     _count_up:
   510  0784                     l664:	
   511                           ;incstack = 0
   512                           ; Regs used in _count_up: [wreg+status,2+status,0]
   513                           
   514  0784  3002               	movlw	2
   515  0785  00F2               	movwf	??_count_up+2
   516  0786  3004               	movlw	4
   517  0787  00F1               	movwf	??_count_up+1
   518  0788  30BA               	movlw	186
   519  0789  00F0               	movwf	??_count_up
   520  078A                     u47:
   521  078A  0BF0               	decfsz	??_count_up,f
   522  078B  2F8A               	goto	u47
   523  078C  0BF1               	decfsz	??_count_up+1,f
   524  078D  2F8A               	goto	u47
   525  078E  0BF2               	decfsz	??_count_up+2,f
   526  078F  2F8A               	goto	u47
   527  0790  0000               	nop
   528  0791                     l666:
   529  0791  3001               	movlw	1
   530  0792  00F0               	movwf	??_count_up
   531  0793  0870               	movf	??_count_up,w
   532  0794  07F4               	addwf	_counter_Bin,f
   533  0795                     l53:
   534  0795  0008               	return
   535  0796                     __end_of_count_up:
   536                           
   537                           	psect	text3
   538  0774                     __ptext3:	
   539 ;; *************** function _count_down *****************
   540 ;; Defined at:
   541 ;;		line 93 in file "CODIGO_ADC.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          3       0       0       0       0
   558 ;;      Totals:         3       0       0       0       0
   559 ;;Total ram usage:        3 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _count_down
   570  0774                     _count_down:
   571  0774                     l670:	
   572                           ;incstack = 0
   573                           ; Regs used in _count_down: [wreg+status,2+status,0]
   574                           
   575  0774  3002               	movlw	2
   576  0775  00F2               	movwf	??_count_down+2
   577  0776  3004               	movlw	4
   578  0777  00F1               	movwf	??_count_down+1
   579  0778  30BA               	movlw	186
   580  0779  00F0               	movwf	??_count_down
   581  077A                     u57:
   582  077A  0BF0               	decfsz	??_count_down,f
   583  077B  2F7A               	goto	u57
   584  077C  0BF1               	decfsz	??_count_down+1,f
   585  077D  2F7A               	goto	u57
   586  077E  0BF2               	decfsz	??_count_down+2,f
   587  077F  2F7A               	goto	u57
   588  0780  0000               	nop
   589  0781                     l672:
   590  0781  3001               	movlw	1
   591  0782  02F4               	subwf	_counter_Bin,f
   592  0783                     l56:
   593  0783  0008               	return
   594  0784                     __end_of_count_down:
   595                           
   596                           	psect	text4
   597  076F                     __ptext4:	
   598 ;; *************** function _PBinario *****************
   599 ;; Defined at:
   600 ;;		line 99 in file "CODIGO_ADC.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _PBinario
   629  076F                     _PBinario:
   630  076F                     l668:	
   631                           ;incstack = 0
   632                           ; Regs used in _PBinario: [wreg]
   633                           
   634  076F  0874               	movf	_counter_Bin,w
   635  0770  1283               	bcf	3,5	;RP0=0, select bank0
   636  0771  1303               	bcf	3,6	;RP1=0, select bank0
   637  0772  0087               	movwf	7	;volatile
   638  0773                     l59:
   639  0773  0008               	return
   640  0774                     __end_of_PBinario:
   641                           
   642                           	psect	text5
   643  0796                     __ptext5:	
   644 ;; *************** function _Alarma *****************
   645 ;; Defined at:
   646 ;;		line 103 in file "CODIGO_ADC.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          3       0       0       0       0
   663 ;;      Totals:         3       0       0       0       0
   664 ;;Total ram usage:        3 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _Alarma
   675  0796                     _Alarma:
   676  0796                     l674:	
   677                           ;incstack = 0
   678                           ; Regs used in _Alarma: [wreg+status,2]
   679                           
   680  0796  1283               	bcf	3,5	;RP0=0, select bank0
   681  0797  1303               	bcf	3,6	;RP1=0, select bank0
   682  0798  1509               	bsf	9,2	;volatile
   683  0799                     l676:
   684  0799  3005               	movlw	5
   685  079A  00F2               	movwf	??_Alarma+2
   686  079B  300F               	movlw	15
   687  079C  00F1               	movwf	??_Alarma+1
   688  079D  30F1               	movlw	241
   689  079E  00F0               	movwf	??_Alarma
   690  079F                     u67:
   691  079F  0BF0               	decfsz	??_Alarma,f
   692  07A0  2F9F               	goto	u67
   693  07A1  0BF1               	decfsz	??_Alarma+1,f
   694  07A2  2F9F               	goto	u67
   695  07A3  0BF2               	decfsz	??_Alarma+2,f
   696  07A4  2F9F               	goto	u67
   697  07A5                     l678:
   698  07A5  01F4               	clrf	_counter_Bin
   699  07A6                     l680:
   700  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   701  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   702  07A8  1109               	bcf	9,2	;volatile
   703  07A9                     l682:
   704  07A9  0187               	clrf	7	;volatile
   705  07AA                     l62:
   706  07AA  0008               	return
   707  07AB                     __end_of_Alarma:
   708  007E                     btemp	set	126	;btemp
   709  007E                     wtemp0	set	126
   710                           
   711                           	psect	config
   712                           
   713                           ;Config register CONFIG1 @ 0x2007
   714                           ;	Oscillator Selection bits
   715                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   716                           ;	Watchdog Timer Enable bit
   717                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   718                           ;	Power-up Timer Enable bit
   719                           ;	PWRTE = OFF, PWRT disabled
   720                           ;	RE3/MCLR pin function select bit
   721                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   722                           ;	Code Protection bit
   723                           ;	CP = OFF, Program memory code protection is disabled
   724                           ;	Data Code Protection bit
   725                           ;	CPD = OFF, Data memory code protection is disabled
   726                           ;	Brown Out Reset Selection bits
   727                           ;	BOREN = OFF, BOR disabled
   728                           ;	Internal External Switchover bit
   729                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   730                           ;	Fail-Safe Clock Monitor Enabled bit
   731                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   732                           ;	Low Voltage Programming Enable bit
   733                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   734                           ;	In-Circuit Debugger Mode bit
   735                           ;	DEBUG = 0x1, unprogrammed default
   736  2007                     	org	8199
   737  2007  20D1               	dw	8401
   738                           
   739                           ;Config register CONFIG2 @ 0x2008
   740                           ;	Brown-out Reset Selection bit
   741                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   742                           ;	Flash Program Memory Self Write Enable bits
   743                           ;	WRT = OFF, Write protection off
   744  2008                     	org	8200
   745  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Alarma
    _main->_count_down
    _main->_count_up

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _Alarma
                           _PBinario
                         _count_down
                           _count_up
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _count_up                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _count_down                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PBinario                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarma                                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarma
   _PBinario
   _count_down
   _count_up
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 15:55:10 2021

                     l50 07C6                       l53 0795                       l62 07AA  
                     l56 0783                       l59 0773                       u10 07D2  
                     u11 07D1                       u20 07E2                       u21 07E1  
                     u30 07F2                       u31 07F1                       u47 078A  
                     u57 077A                       u67 079F                      l660 07BC  
                    l670 0774                      l662 07BF                      l654 07AB  
                    l680 07A6                      l672 0781                      l664 0784  
                    l656 07B5                      l682 07A9                      l674 0796  
                    l666 0791                      l658 07B9                      l690 07DC  
                    l676 0799                      l668 076F                      l692 07E2  
                    l684 07C7                      l678 07A5                      l694 07EC  
                    l686 07CC                      l696 07F2                      l688 07D2  
                   _main 07C7                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTB 0006  
                  _PORTC 0007                    _PORTE 0009                    _TRISB 0086  
                  _TRISC 0087                    _TRISE 0089                    _setup 07AB  
       __end_of_PBinario 0774                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB                   ??_main 0073  
                 ?_setup 0070                   _ANSELH 0189                   _Alarma 0796  
       __end_of_count_up 0796  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07C7                ?_PBinario 0070                  ??_setup 0070  
             __pnvCOMMON 0073                  ?_Alarma 0070               __pmaintext 07C7  
             ??_PBinario 0070                ?_count_up 0070          __size_of_Alarma 0015  
             _count_down 0774                  __ptext1 07AB                  __ptext2 0784  
                __ptext3 0774                  __ptext4 076F                  __ptext5 0796  
   end_of_initialization 07FC               ??_count_up 0070                _PORTBbits 0006  
              _PORTEbits 0009              ?_count_down 0070           __end_of_Alarma 07AB  
      __size_of_PBinario 0005      start_initialization 07FB                 ??_Alarma 0070  
            __pbssCOMMON 0074                ___latbits 0002      __size_of_count_down 0010  
      __size_of_count_up 0012           __size_of_setup 001C                 _PBinario 076F  
            _counter_ADC 0073              _counter_Bin 0074             ??_count_down 0070  
     __end_of_count_down 0784                 _count_up 0784            __size_of_main 0034  
