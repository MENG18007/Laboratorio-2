

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 22:35:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	nvCOMMON
   210  0075                     __pnvCOMMON:
   211  0075                     _counter_ADC:
   212  0075                     	ds	1
   213  0009                     _PORTEbits	set	9
   214  0007                     _PORTC	set	7
   215  0006                     _PORTB	set	6
   216  0009                     _PORTE	set	9
   217  001F                     _ADCON0bits	set	31
   218  0006                     _PORTBbits	set	6
   219  009F                     _ADCON1	set	159
   220  0087                     _TRISC	set	135
   221  0086                     _TRISB	set	134
   222  0089                     _TRISE	set	137
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	cinit
   226  07FA                     start_initialization:	
   227                           ; #config settings
   228                           
   229  07FA                     __initialization:
   230                           
   231                           ; Clear objects allocated to COMMON
   232  07FA  01F3               	clrf	__pbssCOMMON& (0+127)
   233  07FB  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   234  07FC                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  07FC                     __end_of__initialization:
   238  07FC  0183               	clrf	3
   239  07FD  120A  118A  2FBA   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  0073                     __pbssCOMMON:
   243  0073                     _BIT_ALARM:
   244  0073                     	ds	1
   245  0074                     _counter_Bin:
   246  0074                     	ds	1
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:
   250  0070                     ?_setup:
   251  0070                     ??_setup:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_count_up:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ??_count_up:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_PBinario:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_PBinario:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_count_down:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_count_down:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_Alarma:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ??_Alarma:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_ADC_In:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_ADC_In:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_main:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289  0070                     	ds	3
   290  0073                     ??_main:
   291                           
   292                           	psect	maintext
   293  07BA                     __pmaintext:	
   294                           ; 1 bytes @ 0x3
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 50 in file "CODIGO_ADC.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2, status,0, pclath, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels required when called:    2
   320 ;; This function calls:
   321 ;;		_Alarma
   322 ;;		_PBinario
   323 ;;		_count_down
   324 ;;		_count_up
   325 ;;		_setup
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           
   332                           ;psect for function _main
   333  07BA                     _main:
   334  07BA                     l719:	
   335                           ;incstack = 0
   336                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   337                           
   338                           
   339                           ;CODIGO_ADC.c: 51: void setup(void) {
   340  07BA  120A  118A  2799  120A  118A  	fcall	_setup
   341  07BF                     l721:
   342                           
   343                           ;CODIGO_ADC.c: 54:     ANSEL = 0;
   344  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   345  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   346  07C1  1C86               	btfss	6,1	;volatile
   347  07C2  2FC4               	goto	u11
   348  07C3  2FC5               	goto	u10
   349  07C4                     u11:
   350  07C4  2FCF               	goto	l725
   351  07C5                     u10:
   352  07C5                     l723:
   353                           
   354                           ;CODIGO_ADC.c: 55:     TRISB = 0b00000110;
   355  07C5  120A  118A  2770  120A  118A  	fcall	_count_up
   356                           
   357                           ;CODIGO_ADC.c: 56:     PORTB = 0;
   358  07CA  120A  118A  274D  120A  118A  	fcall	_PBinario
   359  07CF                     l725:
   360                           
   361                           ;CODIGO_ADC.c: 58:     PORTC = 0;
   362  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   363  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   364  07D1  1D06               	btfss	6,2	;volatile
   365  07D2  2FD4               	goto	u21
   366  07D3  2FD5               	goto	u20
   367  07D4                     u21:
   368  07D4  2FDF               	goto	l729
   369  07D5                     u20:
   370  07D5                     l727:
   371                           
   372                           ;CODIGO_ADC.c: 59:     counter_ADC = 3;
   373  07D5  120A  118A  2760  120A  118A  	fcall	_count_down
   374                           
   375                           ;CODIGO_ADC.c: 60:     BIT_ALARM = 0;
   376  07DA  120A  118A  274D  120A  118A  	fcall	_PBinario
   377  07DF                     l729:
   378                           
   379                           ;CODIGO_ADC.c: 62: }
   380  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   381  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   382  07E1  189F               	btfsc	31,1	;volatile
   383  07E2  2FE4               	goto	u31
   384  07E3  2FE5               	goto	u30
   385  07E4                     u31:
   386  07E4  2FE6               	goto	l733
   387  07E5                     u30:
   388  07E5                     l731:
   389                           
   390                           ;CODIGO_ADC.c: 63: 
   391  07E5  149F               	bsf	31,1	;volatile
   392  07E6                     l733:
   393                           
   394                           ;CODIGO_ADC.c: 66:     ADCON0bits.ADCS1 = 0;
   395  07E6  0373               	decf	_BIT_ALARM,w
   396  07E7  1D03               	btfss	3,2
   397  07E8  2FEA               	goto	u41
   398  07E9  2FEB               	goto	u40
   399  07EA                     u41:
   400  07EA  2FBF               	goto	l721
   401  07EB                     u40:
   402  07EB                     l735:
   403                           
   404                           ;CODIGO_ADC.c: 67:     ADCON0bits.ADCS0 = 1;
   405  07EB  0875               	movf	_counter_ADC,w
   406  07EC  0674               	xorwf	_counter_Bin,w
   407  07ED  1D03               	skipz
   408  07EE  2FF0               	goto	u51
   409  07EF  2FF1               	goto	u50
   410  07F0                     u51:
   411  07F0  2FBF               	goto	l721
   412  07F1                     u50:
   413  07F1                     l737:
   414                           
   415                           ;CODIGO_ADC.c: 68:     ADCON0bits.CHS3 = 1;
   416  07F1  120A  118A  2784  120A  118A  	fcall	_Alarma
   417  07F6  2FBF               	goto	l721
   418  07F7  120A  118A  2800   	ljmp	start
   419  07FA                     __end_of_main:
   420                           
   421                           	psect	text1
   422  0799                     __ptext1:	
   423 ;; *************** function _setup *****************
   424 ;; Defined at:
   425 ;;		line 79 in file "CODIGO_ADC.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, pclath, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          1       0       0       0       0
   442 ;;      Totals:         1       0       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    1
   446 ;; This function calls:
   447 ;;		_ADC_In
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           
   454                           ;psect for function _setup
   455  0799                     _setup:
   456  0799                     l683:	
   457                           ;incstack = 0
   458                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   459                           
   460                           
   461                           ;CODIGO_ADC.c: 80: void count_up(void){
   462  0799  1683               	bsf	3,5	;RP0=1, select bank1
   463  079A  1303               	bcf	3,6	;RP1=0, select bank1
   464  079B  0189               	clrf	9	;volatile
   465                           
   466                           ;CODIGO_ADC.c: 81:     _delay((unsigned long)((100)*(8000000/4000.0)));
   467  079C  1283               	bcf	3,5	;RP0=0, select bank0
   468  079D  1303               	bcf	3,6	;RP1=0, select bank0
   469  079E  0189               	clrf	9	;volatile
   470                           
   471                           ;CODIGO_ADC.c: 82:     counter_Bin += 1;
   472  079F  1683               	bsf	3,5	;RP0=1, select bank3
   473  07A0  1703               	bsf	3,6	;RP1=1, select bank3
   474  07A1  0188               	clrf	8	;volatile
   475  07A2                     l685:
   476                           
   477                           ;CODIGO_ADC.c: 83:     BIT_ALARM = 1;
   478  07A2  3006               	movlw	6
   479  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   480  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   481  07A5  0086               	movwf	6	;volatile
   482  07A6                     l687:
   483                           
   484                           ;CODIGO_ADC.c: 84: }
   485  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   486  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   487  07A8  0186               	clrf	6	;volatile
   488  07A9                     l689:
   489                           
   490                           ;CODIGO_ADC.c: 85: 
   491  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   492  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   493  07AB  0187               	clrf	7	;volatile
   494  07AC                     l691:
   495                           
   496                           ;CODIGO_ADC.c: 86: void count_down(void){
   497  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   498  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   499  07AE  0187               	clrf	7	;volatile
   500                           
   501                           ;CODIGO_ADC.c: 87:     _delay((unsigned long)((100)*(8000000/4000.0)));
   502  07AF  3003               	movlw	3
   503  07B0  00F0               	movwf	??_setup
   504  07B1  0870               	movf	??_setup,w
   505  07B2  00F5               	movwf	_counter_ADC
   506  07B3                     l693:
   507                           
   508                           ;CODIGO_ADC.c: 88:     counter_Bin -= 1;
   509  07B3  01F3               	clrf	_BIT_ALARM
   510  07B4                     l695:
   511                           
   512                           ;CODIGO_ADC.c: 89: }
   513  07B4  120A  118A  2752  120A  118A  	fcall	_ADC_In
   514  07B9                     l58:
   515  07B9  0008               	return
   516  07BA                     __end_of_setup:
   517                           
   518                           	psect	text2
   519  0752                     __ptext2:	
   520 ;; *************** function _ADC_In *****************
   521 ;; Defined at:
   522 ;;		line 92 in file "CODIGO_ADC.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		status,2
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_setup
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _ADC_In
   551  0752                     _ADC_In:
   552  0752                     l665:	
   553                           ;incstack = 0
   554                           ; Regs used in _ADC_In: [status,2]
   555                           
   556                           
   557                           ;CODIGO_ADC.c: 93: }
   558  0752  1683               	bsf	3,5	;RP0=1, select bank1
   559  0753  1303               	bcf	3,6	;RP1=0, select bank1
   560  0754  019F               	clrf	31	;volatile
   561  0755                     l667:
   562                           
   563                           ;CODIGO_ADC.c: 94: 
   564  0755  1283               	bcf	3,5	;RP0=0, select bank0
   565  0756  1303               	bcf	3,6	;RP1=0, select bank0
   566  0757  139F               	bcf	31,7	;volatile
   567  0758                     l669:
   568                           
   569                           ;CODIGO_ADC.c: 95: void Alarma(void){
   570  0758  171F               	bsf	31,6	;volatile
   571  0759                     l671:
   572                           
   573                           ;CODIGO_ADC.c: 96:     PORTEbits.RE2 = 1;
   574  0759  169F               	bsf	31,5	;volatile
   575  075A                     l673:
   576                           
   577                           ;CODIGO_ADC.c: 97:     _delay((unsigned long)((400)*(8000000/4000.0)));
   578  075A  161F               	bsf	31,4	;volatile
   579  075B                     l675:
   580                           
   581                           ;CODIGO_ADC.c: 98:     counter_Bin = 0;
   582  075B  119F               	bcf	31,3	;volatile
   583  075C                     l677:
   584                           
   585                           ;CODIGO_ADC.c: 99:     PORTEbits.RE2 = 0;
   586  075C  111F               	bcf	31,2	;volatile
   587  075D                     l679:
   588                           
   589                           ;CODIGO_ADC.c: 100:     PORTC = 0;
   590  075D  109F               	bcf	31,1	;volatile
   591  075E                     l681:
   592                           
   593                           ;CODIGO_ADC.c: 101: }
   594  075E  141F               	bsf	31,0	;volatile
   595  075F                     l61:
   596  075F  0008               	return
   597  0760                     __end_of_ADC_In:
   598                           
   599                           	psect	text3
   600  0770                     __ptext3:	
   601 ;; *************** function _count_up *****************
   602 ;; Defined at:
   603 ;;		line 108 in file "CODIGO_ADC.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0
   619 ;;      Temps:          3       0       0       0       0
   620 ;;      Totals:         3       0       0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _count_up
   632  0770                     _count_up:
   633  0770                     l697:	
   634                           ;incstack = 0
   635                           ; Regs used in _count_up: [wreg+status,2+status,0]
   636                           
   637  0770  3002               	movlw	2
   638  0771  00F2               	movwf	??_count_up+2
   639  0772  3004               	movlw	4
   640  0773  00F1               	movwf	??_count_up+1
   641  0774  30BA               	movlw	186
   642  0775  00F0               	movwf	??_count_up
   643  0776                     u67:
   644  0776  0BF0               	decfsz	??_count_up,f
   645  0777  2F76               	goto	u67
   646  0778  0BF1               	decfsz	??_count_up+1,f
   647  0779  2F76               	goto	u67
   648  077A  0BF2               	decfsz	??_count_up+2,f
   649  077B  2F76               	goto	u67
   650  077C  0000               	nop
   651  077D                     l699:
   652  077D  3001               	movlw	1
   653  077E  00F0               	movwf	??_count_up
   654  077F  0870               	movf	??_count_up,w
   655  0780  07F4               	addwf	_counter_Bin,f
   656  0781                     l701:
   657  0781  01F3               	clrf	_BIT_ALARM
   658  0782  0AF3               	incf	_BIT_ALARM,f
   659  0783                     l64:
   660  0783  0008               	return
   661  0784                     __end_of_count_up:
   662                           
   663                           	psect	text4
   664  0760                     __ptext4:	
   665 ;; *************** function _count_down *****************
   666 ;; Defined at:
   667 ;;		line 114 in file "CODIGO_ADC.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          3       0       0       0       0
   684 ;;      Totals:         3       0       0       0       0
   685 ;;Total ram usage:        3 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _count_down
   696  0760                     _count_down:
   697  0760                     l705:	
   698                           ;incstack = 0
   699                           ; Regs used in _count_down: [wreg+status,2+status,0]
   700                           
   701  0760  3002               	movlw	2
   702  0761  00F2               	movwf	??_count_down+2
   703  0762  3004               	movlw	4
   704  0763  00F1               	movwf	??_count_down+1
   705  0764  30BA               	movlw	186
   706  0765  00F0               	movwf	??_count_down
   707  0766                     u77:
   708  0766  0BF0               	decfsz	??_count_down,f
   709  0767  2F66               	goto	u77
   710  0768  0BF1               	decfsz	??_count_down+1,f
   711  0769  2F66               	goto	u77
   712  076A  0BF2               	decfsz	??_count_down+2,f
   713  076B  2F66               	goto	u77
   714  076C  0000               	nop
   715  076D                     l707:
   716  076D  3001               	movlw	1
   717  076E  02F4               	subwf	_counter_Bin,f
   718  076F                     l67:
   719  076F  0008               	return
   720  0770                     __end_of_count_down:
   721                           
   722                           	psect	text5
   723  074D                     __ptext5:	
   724 ;; *************** function _PBinario *****************
   725 ;; Defined at:
   726 ;;		line 119 in file "CODIGO_ADC.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _PBinario
   755  074D                     _PBinario:
   756  074D                     l703:	
   757                           ;incstack = 0
   758                           ; Regs used in _PBinario: [wreg]
   759                           
   760  074D  0874               	movf	_counter_Bin,w
   761  074E  1283               	bcf	3,5	;RP0=0, select bank0
   762  074F  1303               	bcf	3,6	;RP1=0, select bank0
   763  0750  0087               	movwf	7	;volatile
   764  0751                     l70:
   765  0751  0008               	return
   766  0752                     __end_of_PBinario:
   767                           
   768                           	psect	text6
   769  0784                     __ptext6:	
   770 ;; *************** function _Alarma *****************
   771 ;; Defined at:
   772 ;;		line 123 in file "CODIGO_ADC.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0
   788 ;;      Temps:          3       0       0       0       0
   789 ;;      Totals:         3       0       0       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _Alarma
   801  0784                     _Alarma:
   802  0784                     l709:	
   803                           ;incstack = 0
   804                           ; Regs used in _Alarma: [wreg+status,2]
   805                           
   806  0784  1283               	bcf	3,5	;RP0=0, select bank0
   807  0785  1303               	bcf	3,6	;RP1=0, select bank0
   808  0786  1509               	bsf	9,2	;volatile
   809  0787                     l711:
   810  0787  3005               	movlw	5
   811  0788  00F2               	movwf	??_Alarma+2
   812  0789  300F               	movlw	15
   813  078A  00F1               	movwf	??_Alarma+1
   814  078B  30F1               	movlw	241
   815  078C  00F0               	movwf	??_Alarma
   816  078D                     u87:
   817  078D  0BF0               	decfsz	??_Alarma,f
   818  078E  2F8D               	goto	u87
   819  078F  0BF1               	decfsz	??_Alarma+1,f
   820  0790  2F8D               	goto	u87
   821  0791  0BF2               	decfsz	??_Alarma+2,f
   822  0792  2F8D               	goto	u87
   823  0793                     l713:
   824  0793  01F4               	clrf	_counter_Bin
   825  0794                     l715:
   826  0794  1283               	bcf	3,5	;RP0=0, select bank0
   827  0795  1303               	bcf	3,6	;RP1=0, select bank0
   828  0796  1109               	bcf	9,2	;volatile
   829  0797                     l717:
   830  0797  0187               	clrf	7	;volatile
   831  0798                     l73:
   832  0798  0008               	return
   833  0799                     __end_of_Alarma:
   834  007E                     btemp	set	126	;btemp
   835  007E                     wtemp0	set	126
   836                           
   837                           	psect	config
   838                           
   839                           ;Config register CONFIG1 @ 0x2007
   840                           ;	Oscillator Selection bits
   841                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   842                           ;	Watchdog Timer Enable bit
   843                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   844                           ;	Power-up Timer Enable bit
   845                           ;	PWRTE = OFF, PWRT disabled
   846                           ;	RE3/MCLR pin function select bit
   847                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   848                           ;	Code Protection bit
   849                           ;	CP = OFF, Program memory code protection is disabled
   850                           ;	Data Code Protection bit
   851                           ;	CPD = OFF, Data memory code protection is disabled
   852                           ;	Brown Out Reset Selection bits
   853                           ;	BOREN = OFF, BOR disabled
   854                           ;	Internal External Switchover bit
   855                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   856                           ;	Fail-Safe Clock Monitor Enabled bit
   857                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   858                           ;	Low Voltage Programming Enable bit
   859                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   860                           ;	In-Circuit Debugger Mode bit
   861                           ;	DEBUG = 0x1, unprogrammed default
   862  2007                     	org	8199
   863  2007  20D1               	dw	8401
   864                           
   865                           ;Config register CONFIG2 @ 0x2008
   866                           ;	Brown-out Reset Selection bit
   867                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   868                           ;	Flash Program Memory Self Write Enable bits
   869                           ;	WRT = OFF, Write protection off
   870  2008                     	org	8200
   871  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Alarma
    _main->_count_down
    _main->_count_up

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _Alarma
                           _PBinario
                         _count_down
                           _count_up
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 COMMON     1     1      0
                             _ADC_In
 ---------------------------------------------------------------------------------
 (2) _ADC_In                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _count_up                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _count_down                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PBinario                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarma                                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarma
   _PBinario
   _count_down
   _count_up
   _setup
     _ADC_In

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 22:35:40 2021

                     l61 075F                       l70 0751                       l64 0783  
                     l73 0798                       l58 07B9                       l67 076F  
                     u10 07C5                       u11 07C4                       u20 07D5  
                     u21 07D4                       u30 07E5                       u31 07E4  
                     u40 07EB                       u41 07EA                       u50 07F1  
                     u51 07F0                       u67 0776                       u77 0766  
                     u87 078D                      l701 0781                      l711 0787  
                    l703 074D                      l713 0793                      l705 0760  
                    l721 07BF                      l715 0794                      l707 076D  
                    l731 07E5                      l723 07C5                      l717 0797  
                    l709 0784                      l733 07E6                      l725 07CF  
                    l671 0759                      l735 07EB                      l727 07D5  
                    l719 07BA                      l681 075E                      l673 075A  
                    l665 0752                      l737 07F1                      l729 07DF  
                    l675 075B                      l667 0755                      l691 07AC  
                    l683 0799                      l677 075C                      l669 0758  
                    l693 07B3                      l685 07A2                      l679 075D  
                    l695 07B4                      l687 07A6                      l697 0770  
                    l689 07A9                      l699 077D                     _main 07BA  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTC 0007  
                  _PORTE 0009                    _TRISB 0086                    _TRISC 0087  
                  _TRISE 0089                    _setup 0799         __end_of_PBinario 0752  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0073                   _ADCON1 009F  
                 _ADC_In 0752                   ?_setup 0070                   _Alarma 0784  
       __end_of_count_up 0784  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07BA                ?_PBinario 0070                  ?_ADC_In 0070  
                ??_setup 0070               __pnvCOMMON 0075                  ?_Alarma 0070  
             __pmaintext 07BA               ??_PBinario 0070          __size_of_ADC_In 000E  
              ?_count_up 0070          __size_of_Alarma 0015               _count_down 0760  
              _BIT_ALARM 0073                  __ptext1 0799                  __ptext2 0752  
                __ptext3 0770                  __ptext4 0760                  __ptext5 074D  
                __ptext6 0784     end_of_initialization 07FC               ??_count_up 0070  
              _PORTBbits 0006                _PORTEbits 0009           __end_of_ADC_In 0760  
            ?_count_down 0070           __end_of_Alarma 0799        __size_of_PBinario 0005  
    start_initialization 07FA                 ??_ADC_In 0070                 ??_Alarma 0070  
            __pbssCOMMON 0073                ___latbits 0002      __size_of_count_down 0010  
      __size_of_count_up 0014           __size_of_setup 0021               _ADCON0bits 001F  
               _PBinario 074D              _counter_ADC 0075              _counter_Bin 0074  
           ??_count_down 0070       __end_of_count_down 0770                 _count_up 0770  
          __size_of_main 0040  
